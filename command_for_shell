Импорт необходимых моделей
from django.contrib.auth.models import User
from yourapp.models import Author, Category, Post, Comment
1. Создание двух пользователей
user1 = User.objects.create_user('username1', 'user1@example.com', 'user1password')
user2 = User.objects.create_user('username2', 'user2@example.com', 'user2password')
2. Создание двух объектов модели Author, связанных с пользователями
author1 = Author.objects.create(user=user1)
author2 = Author.objects.create(user=user2)
3. Добавление 4 категорий в модель Category
category1 = Category.objects.create(name='Technology')
category2 = Category.objects.create(name='Health')
category3 = Category.objects.create(name='Politics')
category4 = Category.objects.create(name='Sports')
4. Добавление 2 статей и 1 новости
post1 = Post.objects.create(author=author1, post_type='AR', title='Article 1', text='Content of article 1')
post2 = Post.objects.create(author=author2, post_type='AR', title='Article 2', text='Content of article 2')
post3 = Post.objects.create(author=author1, post_type='NW', title='News 1', text='Content of news 1')
5. Присвоение категорий статьям/новостям
post1.categories.add(category1, category2)
post2.categories.add(category3)
post3.categories.add(category4)
6. Создание комментариев к разным объектам модели Post
comment1 = Comment.objects.create(post=post1, user=user1, text='Comment 1 on post 1')
comment2 = Comment.objects.create(post=post1, user=user2, text='Comment 2 on post 1')
comment3 = Comment.objects.create(post=post2, user=user1, text='Comment 1 on post 2')
comment4 = Comment.objects.create(post=post3, user=user2, text='Comment 1 on post 3')
7. Корректировка рейтингов с помощью функций like() и dislike()
post1.like()
post2.dislike()
comment1.like()
comment2.like()
comment3.dislike()
comment4.like()
8. Обновление рейтингов пользователей
author1.update_rating()
author2.update_rating()
9. Вывод username и рейтинга лучшего пользователя
best_author = Author.objects.order_by('-rating').first()
print(best_author.user.username, best_author.rating)
10. Вывод информации о лучшей статье
best_post = Post.objects.order_by('-rating').first()
print(f"Date: {best_post.creation_time}, Author: {best_post.author.user.username}, Rating: {best_post.rating}, Title: {best_post.title}, Preview: {best_post.preview()}")
11. Вывод всех комментариев к лучшей статье
comments = Comment.objects.filter(post=best_post)
for comment in comments:
    print(f"Date: {comment.creation_time}, User: {comment.user.username}, Rating: {comment.rating}, Text: {comment.text}")